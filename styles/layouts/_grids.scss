@use 'sass:math';

/*
 MOBILE (<768px) ------------
 # fixture ................. sm
 # of columns .............. 4
 # gutter .................. 20px
 # margin ............. .... 5px
 #container-size ........... 100% - ( 5px * 2 )

Tablet (>768px) ------------
 # fixture ................. md
 # of columns .............. 12
 # gutter .................. 20px
 # margin ...................30px
 #container-size ............100% - ( 30px * 2 )
 # max-container-size .......960px

 Tablet (<1200px) ------------
 # fixture ................. lg
 # of columns ............. 12
 # gutter ..................20px
 # unit ....................75px
 # margin ..................auto
 #container-size ...........1140px
 # max-container-size ......1140px
 */

@debug ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  //.col-
  [class^='col-'] {
    padding: 0 math.div($gutter, 2);
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      // width: $i / $sm-columns * 100%;
      width: percentage(math.div($i, $sm-columns));
    }
  }
  @media screen and (min-width: $md-breakpoint) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage(math.div($i, $md-columns));
      }
    }
  }
  @media screen and (min-width: $lg-breakpoint) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
